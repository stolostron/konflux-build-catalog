apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: stolostron-common-fbc-builder-pipeline
spec:
  description: |
    This pipeline is ideal for building and verifying [file-based catalogs](https://konflux-ci.dev/docs/end-to-end/building-olm/#building-the-file-based-catalog).

    _Uses `buildah` to create a container image. Its build-time tests are limited to verifying the included catalog and do not scan the image.
    This pipeline is pushed as a Tekton bundle to [quay.io](https://quay.io/repository/konflux-ci/tekton-catalog/pipeline-fbc-builder?tab=tags)_
  finally:
  - name: show-sbom
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: show-sbom
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:beb0616db051952b4b861dd8c3e00fa1c0eccbd926feddf71194d3bb3ace9ce7
      - name: kind
        value: task
      resolver: bundles
  - name: slack-webhook-notification
    params:
      - name: message
        value: |
          :bangbang: PipelineRun name: $(context.pipelineRun.name) id: $(context.pipelineRun.uid) failed:
          - git source: $(params.git-url)/commit/$(params.revision)
          - output image: $(params.output-image)
          - see details: https://konflux-ui.apps.stone-prd-rh01.pg1f.p1.openshiftapps.com/ns/$(context.pipelineRun.namespace)/applications/$(params.konflux-application-name)/pipelineruns/$(context.pipelineRun.name)
      - name: secret-name
        value: $(params.slack-webhook-url-secret-name)
      - name: key-name
        value: $(params.slack-webhook-url-secret-key)
      - name: user-ids
        value:
          - $(params.slack-member-id)
      - name: group-ids
        value:
          - $(params.slack-group-id)
    taskRef:
      params:
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:f81bd9de5ab2984556cbacf7ffcce91f91b03521f8644e54d47c18898c100306
      - name: name
        value: slack-webhook-notification
      - name: kind
        value: Task
      resolver: bundles
    when:
      - input: $(tasks.status)
        operator: in
        values:
        - "Failed"
      - input: $(params.send-slack-notification)
        operator: in
        values:
        - "true"
  params:
  - description: Source Repository URL
    name: git-url
    type: string
  - default: ""
    description: Revision of the Source Repository
    name: revision
    type: string
  - description: Fully Qualified Output Image
    name: output-image
    type: string
  - default: []
    description: Additional tags to add to the image
    name: additional-tags
    type: array
  - default: .
    description: Path to the source code of an application's component from where
      to build image.
    name: path-context
    type: string
  - default: Dockerfile
    description: Path to the Dockerfile inside the context specified by parameter
      path-context
    name: dockerfile
    type: string
  - default: "false"
    description: Force rebuild image
    name: rebuild
    type: string
  - default: "false"
    description: Skip checks against built image
    name: skip-checks
    type: string
  - default: "true"
    description: Execute the build with network isolation
    name: hermetic
    type: string
  - default: ""
    description: Build dependencies to be prefetched by Cachi2
    name: prefetch-input
    type: string
  - default: ""
    description: Image tag expiration time, time values could be something like
      1h, 2d, 3w for hours, days, and weeks, respectively.
    name: image-expires-after
    type: string
  - default: "true"
    description: Build a source image.
    name: build-source-image
    type: string
  - default: "true"
    description: Add built image into an OCI image index
    name: build-image-index
    type: string
  - default: []
    description: Array of --build-arg values ("arg=value" strings) for buildah
    name: build-args
    type: array
  - default: ""
    description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
    name: build-args-file
    type: string
  - default:
    - linux/x86_64
    description: List of platforms to build the container images on. The available
      set of values is determined by the configuration of the multi-platform-controller.
    name: build-platforms
    type: array
  - default: []
    description: An array of arguments passed to opm when executed.
    name: opm-args
    type: array
  - default: ""
    description: The path where the output from opm will be stored (i.e., where catalog.json will be saved).
    name: opm-output-path
    type: string
  - default: ""
    description: The path to the ImageDigestMirrorSet file in YAML format.
    name: idms-path
    type: string
  - default: "false"
    description: Whether to send slack notification when the pipeline run failed
    name: send-slack-notification
    type: string
  - default: "" # Need to change for each release, empty for non-release
    name: konflux-application-name
    description: The name of the application in Konflux, this is required when send-slack-notification is true
    type: string
  - default: "slack-acm-notify-secret"
    name: slack-webhook-url-secret-name
    description: |
      The name of the secret in the konflux tenant namespace which contains the slack webhook url, this is required when send-slack-notification is true.
      If it does not exist, please prepare the slack webhook url for your team and contact the konflux tenant admins to create it.
      The default secret is "slack-acm-notify-secret", which will send the slack message to the forum-acm-konflux-pipeline-status channel.
      See details: https://konflux.pages.redhat.com/docs/users/patterns/slack-notifications.html
    type: string
  - default: "forum-acm-konflux-pipeline-status-webhook-url"
    name: slack-webhook-url-secret-key
    description: |
      The key of the slack webhook url in the secret, this is required when send-slack-notification is true.
      Should be changed according to how the secret slack-webhook-url-secret-name is created.
      The default key is "forum-acm-konflux-pipeline-status-webhook-url", which will send the slack message to the forum-acm-konflux-pipeline-status channel.
      See details: https://konflux.pages.redhat.com/docs/users/patterns/slack-notifications.html
    type: string
  - default: ""
    name: slack-member-id
    description: |
      The member id of the slack user, if this is set will mention the user in the slack message; this id can be found in the slack user profile
      by clicking the user profile, in the profile pop-up, click the "More" icon(three dots), and then click "Copy member ID" button. e.g. U0600000000
    type: string
  - default: ""
    name: slack-group-id
    description: |
      The group id of the slack user group, if this is set will mention the group in the slack message; this id can be found by viewing the user group details. e.g. S07XXXXXXXX
  results:
  - description: ""
    name: IMAGE_URL
    value: $(tasks.build-image-index.results.IMAGE_URL)
  - description: ""
    name: IMAGE_DIGEST
    value: $(tasks.build-image-index.results.IMAGE_DIGEST)
  - description: ""
    name: CHAINS-GIT_URL
    value: $(tasks.clone-repository.results.url)
  - description: ""
    name: CHAINS-GIT_COMMIT
    value: $(tasks.clone-repository.results.commit)
  tasks:
  - name: init
    params:
    - name: image-url
      value: $(params.output-image)
    - name: rebuild
      value: $(params.rebuild)
    - name: skip-checks
      value: $(params.skip-checks)
    taskRef:
      params:
      - name: name
        value: init
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:3ca52e1d8885fc229bd9067275f44d5b21a9a609981d0324b525ddeca909bf10
      - name: kind
        value: task
      resolver: bundles
  - name: clone-repository
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
    - name: ociStorage
      value: $(params.output-image).git
    - name: ociArtifactExpiresAfter
      value: $(params.image-expires-after)
    runAfter:
    - init
    taskRef:
      params:
      - name: name
        value: git-clone-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:bb2f8f1edec47faa08c1929f2ffc6748f3a96af9644e6c40000081c6ff3ec894
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    workspaces:
    - name: basic-auth
      workspace: git-auth
  - name: run-opm-command
    params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: ociStorage
        value: $(params.output-image).opm
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      - name: OPM_ARGS
        value:
          - $(params.opm-args[*])
      - name: OPM_OUTPUT_PATH
        value: $(params.opm-output-path)
      - name: IDMS_PATH
        value: $(params.idms-path)
    runAfter:
      - clone-repository
    taskRef:
      params:
        - name: name
          value: run-opm-command-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-run-opm-command-oci-ta:0.1@sha256:4ab5dba35166a976c3d6293913501fdfc79a3222395388fc6208641ab8bc9359
        - name: kind
          value: task
      resolver: bundles
  - name: prefetch-dependencies
    params:
    - name: input
      value: $(params.prefetch-input)
    - name: SOURCE_ARTIFACT
      value: $(tasks.run-opm-command.results.SOURCE_ARTIFACT)
    - name: ociStorage
      value: $(params.output-image).prefetch
    - name: ociArtifactExpiresAfter
      value: $(params.image-expires-after)
    runAfter:
    - run-opm-command
    taskRef:
      params:
      - name: name
        value: prefetch-dependencies-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:0503f9313dfe70e4defda88a7226ec91a74af42198dccfa3280397d965aa16d6
      - name: kind
        value: task
      resolver: bundles
    workspaces:
    - name: git-basic-auth
      workspace: git-auth
    - name: netrc
      workspace: netrc
  - matrix:
      params:
      - name: PLATFORM
        value:
        - $(params.build-platforms)
    name: build-images
    params:
    - name: IMAGE
      value: $(params.output-image)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    - name: HERMETIC
      value: $(params.hermetic)
    - name: PREFETCH_INPUT
      value: $(params.prefetch-input)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: BUILD_ARGS
      value:
      - $(params.build-args[*])
    - name: BUILD_ARGS_FILE
      value: $(params.build-args-file)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    - name: CACHI2_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    - name: IMAGE_APPEND_PLATFORM
      value: "true"
    runAfter:
    - clone-repository
    taskRef:
      params:
      - name: name
        value: buildah-remote-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta:0.6@sha256:3832edaec1aae546c225c86ada53611e42717c784e2068e0536831a99cb1922d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
  - name: build-image-index
    params:
    - name: IMAGE
      value: $(params.output-image)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: ALWAYS_BUILD_INDEX
      value: $(params.build-image-index)
    - name: IMAGES
      value:
      - $(tasks.build-images.results.IMAGE_REF[*])
    runAfter:
    - build-images
    taskRef:
      params:
      - name: name
        value: build-image-index
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:d94cad7f41be61074dd21c7dff26dab9217c3435a16f62813c1cb8382dd9aae6
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
  - name: build-source-image
    params:
    - name: BINARY_IMAGE
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: BINARY_IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    - name: CACHI2_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: source-build-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta:0.3@sha256:5f9069a07a6dc16aae7a05adf49d2b6792815f3fabd116377578860743f4e0ec
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    - input: $(params.build-source-image)
      operator: in
      values:
      - "true"
  - matrix:
      params:
      - name: image-platform
        value:
        - $(params.build-platforms)
    name: clair-scan
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: clair-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.3@sha256:8ec7d7b9438ace5ef3fb03a533d9440d0fd81e51c73b0dc1eb51602fb7cd044e
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: deprecated-base-image-check
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: deprecated-image-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:f59175d9a0a60411738228dfe568af4684af4aa5e7e05c832927cb917801d489
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: apply-tags
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: ADDITIONAL_TAGS
      value: $(params.additional-tags[*])
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: apply-tags
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.2@sha256:f44be1bf0262471f2f503f5e19da5f0628dcaf968c86272a2ad6b4871e708448
      - name: kind
        value: task
      resolver: bundles
  - name: validate-fbc
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: validate-fbc
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-validate-fbc:0.1@sha256:b6dc1948778552a53b863682f8d42dcdda8b25348b5a3b97efb2398ba17f290d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: fbc-target-index-pruning-check
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: TARGET_INDEX
      value: registry.redhat.io/redhat/redhat-operator-index
    - name: RENDERED_CATALOG_DIGEST
      value: $(tasks.validate-fbc.results.RENDERED_CATALOG_DIGEST)
    runAfter:
    - validate-fbc
    taskRef:
      params:
      - name: name
        value: fbc-target-index-pruning-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-fbc-target-index-pruning-check:0.1@sha256:558d3649022d70ac2b2a69010e6026385767bbb93c6b4b63c18985eb0a5ecd2e
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: fbc-fips-check-oci-ta
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: fbc-fips-check-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-fbc-fips-check-oci-ta:0.1@sha256:404f3bb83d250b75d7246db21a6bb8f09ba9f307ba781d448ac6825baae1ad4d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  workspaces:
  - name: git-auth
    optional: true
  - name: netrc
    optional: true
